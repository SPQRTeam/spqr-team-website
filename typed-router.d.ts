/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/code-releases': RouteRecordInfo<'/code-releases', '/code-releases', Record<never, never>, Record<never, never>>,
    '/contacts': RouteRecordInfo<'/contacts', '/contacts', Record<never, never>, Record<never, never>>,
    '/events': RouteRecordInfo<'/events', '/events', Record<never, never>, Record<never, never>>,
    '/media': RouteRecordInfo<'/media', '/media', Record<never, never>, Record<never, never>>,
    '/press': RouteRecordInfo<'/press', '/press', Record<never, never>, Record<never, never>>,
    '/research': RouteRecordInfo<'/research', '/research', Record<never, never>, Record<never, never>>,
    '/sponsors': RouteRecordInfo<'/sponsors', '/sponsors', Record<never, never>, Record<never, never>>,
    '/students': RouteRecordInfo<'/students', '/students', Record<never, never>, Record<never, never>>,
    '/team': RouteRecordInfo<'/team', '/team', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/code-releases.vue': {
      routes: '/code-releases'
      views: never
    }
    'src/pages/contacts.vue': {
      routes: '/contacts'
      views: never
    }
    'src/pages/events.vue': {
      routes: '/events'
      views: never
    }
    'src/pages/media.vue': {
      routes: '/media'
      views: never
    }
    'src/pages/press.vue': {
      routes: '/press'
      views: never
    }
    'src/pages/research.vue': {
      routes: '/research'
      views: never
    }
    'src/pages/sponsors.vue': {
      routes: '/sponsors'
      views: never
    }
    'src/pages/students.vue': {
      routes: '/students'
      views: never
    }
    'src/pages/team.vue': {
      routes: '/team'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
